apiVersion: v1
kind: Service
metadata:
  name: drupal-svc
  labels:
    env: production
spec:
  ports:
    - port: 80
  selector:
    env: production
    tier: frontend
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: drupal-pv-claim1
  annotations:
    volume.beta.kubernetes.io/storage-class: "aws-efs"
  labels:
    env: production
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: drupal-pv-claim2
  annotations:
    volume.beta.kubernetes.io/storage-class: "aws-efs"
  labels:
    env: production
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: drupal
  labels:
    env: production
spec:
  replicas: 2
  selector:
    matchLabels:
      env: production
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        env: production
        tier: frontend
    spec:
      containers:
      - image: drupal:8-apache
        name: drupal-cont
        ports:
        - containerPort: 80
          name: drupal-port
        volumeMounts:    
            - name: drupal-persistent-storage1
              mountPath: /var/www/html/profiles
            - name: drupal-persistent-storage2
              mountPath: /var/www/html/themes
      volumes:
      - name: drupal-persistent-storage1
        persistentVolumeClaim:
          claimName: drupal-pv-claim1
      - name: drupal-persistent-storage2
        persistentVolumeClaim:
          claimName: drupal-pv-claim2
